/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* asteroidCollision(int* nums, int numsSize, int* returnSize) {

int stack[10005] , top = -1;



    for(int i = 0 ; i < numsSize ; i++)
    {
        if(nums[i] > 0)
        {
            stack[++top] = nums[i];
        }
        else
        {
            int k = abs(nums[i]);
            int c = 0;
            for(int j = 0 ; j <= top ; j++)
            {
              if(stack[j] < 0)
              {
                   c++;
              }
            }

            if(c == top+1)
            {  
                stack[++top] = nums[i];
            }
            else
            {
                while(top > -1 && stack[top]>0 && stack[top] < k)
                {
                    stack[top--];
                }
                if(top > -1 && stack[top] == k)
                {
                    stack[top--];
                }
                else if(top > -1 && stack[top] == nums[i])
                {
                    stack[++top] = nums[i];
                }
                else if(top > -1 && stack[top] < 0)
                {
                    stack[++top] = nums[i];
                }
                else
                {   if(top == -1)
                    {
                        stack[++top] = nums[i];
                    }
                }
            }
        }
    }

int *jvrc = (int *)malloc(10005 * sizeof(int )), o = 0 ;

for(int i = 0 ; i <= top ; i++)
{
    jvrc[o] = stack[i];
    o++;
}

*returnSize = o ;
return jvrc ;

}
